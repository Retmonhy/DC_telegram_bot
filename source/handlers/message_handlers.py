from bot import * 
from telebot import types
from math import *
from enums import CalculatorSteps
from handlers.command_handlers import *
from handlers.callback_handlers import *
import model_singleton

@bot.message_handler(content_types=['text'])
def buttons(message):
  model: CalculationModel = model_singleton.get_model_by_id(message.chat.id)
  match model.current_step:

    case CalculatorSteps.last_mine_level:
      # –≤–≤–æ–¥–∏—Ç —É—Ä–æ–≤–µ–Ω—å
      if (message.text.isdigit()):
        if (int(message.text) < 35):
          bot.send_message(message.chat.id, f'''–í –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 0 –¥–æ {int(message.text)} –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∏ –æ–¥–Ω–∞ —à–∞—Ö—Ç–∞. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å''')  
        else:
          # –µ—Å–ª–∏ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞—Å —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏–ª–∏, —Ç–æ –º—ã —Å–µ—Ç—Ç–∏–º —É—Ä–æ–≤–µ–Ω—å –∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ
          model.set_level(int(message.text))
          message_text = f'''–ü–æ—Å–ª–µ–¥–Ω—è—è —à–∞—Ö—Ç–∞ –∑–∞–ø–æ–Ω—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ *{model.level}*.
–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ—Ä–æ–µ–≤ –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ —à–∞—Ö—Ç—ã.

*–ü—Ä–∏–º–µ—Ä*: 104 –∏–ª–∏ 76'''
          bot.send_message(message.chat.id, message_text, 'markdown')
          # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —à–∞–≥
          model.go_to_step(CalculatorSteps.heroes_amount)
      else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –≤—ã –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ –ø–æ—Å–ª–µ–¥–Ω—é—é —à–∞—Ö—Ç—É")

    case CalculatorSteps.heroes_amount:
      # –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ—Ä–æ–µ–≤
      if (message.text.isdigit()):        
        if (int(message.text) < 4):
          bot.send_message(message.chat.id, f'''–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ—Ä–æ–µ–≤ {int(message.text)} –Ω–µ —Å–ø–æ—Å–æ–±–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–∏ –æ–¥–Ω—É —à–∞—Ö—Ç—É. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ''')  
        else:
          model.set_heroes(int(message.text))
          message_text = f'''‚ùóÔ∏è<u>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ä–∞—Å—á–µ—Ç–∞:</u>
‚Äî <b>–£–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–æ–∫</b> –∏ –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –∏–∑—É–º—Ä—É–¥–æ–≤ –ø–æ–ª—É—á–∏—Ç—Å—è
‚Äî <b>–£–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É–º—Ä—É–¥–æ–≤</b> –∏ —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –±—É—Ç—ã–ª–æ–∫ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –∏—Ö –Ω–∞–±—Ä–∞—Ç—å'''
          markup = types.InlineKeyboardMarkup()
          bottles_button = types.InlineKeyboardButton('üçæ–£–∫–∞–∑–∞—Ç—å –±—É–ª—ã—Ç–∫–∏', callback_data='specify_bottles')
          emeralds_button = types.InlineKeyboardButton('üíé–£–∫–∞–∑–∞—Ç—å –∏–∑—É–º—Ä—É–¥—ã', callback_data='specify_emeralds')
          markup.add(bottles_button, emeralds_button)
          bot.send_message(message.chat.id, message_text, reply_markup=markup, parse_mode='html')
      else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ—Ä–æ–µ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ —à–∞—Ö—Ç—ã")

    case CalculatorSteps.emeralds:
      # –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É–º—Ä—É–¥–æ–≤
      if (message.text.isdigit()):
        model.set_emeralds(int(message.text))
        # —Å–ø—Ä–æ—Å–∏–º —Å–∫–æ–ª—å–∫–æ —Ç–µ–º–Ω—ã—Ö —Ä–∏—Ç—É–∞–ª–æ–≤ –∑–∞ –±–æ–ª—å—à–æ–π –∫—Ä—É–≥ –¥–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        how_much_dark_rit(message)
        model.go_to_step(CalculatorSteps.dr_amount)
      else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É–º—Ä—É–¥–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫–æ–ø–∏—Ç—å")
    
    case CalculatorSteps.bottles:
      # –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–æ–∫
      if (message.text.isdigit()):
        model.set_bottles(int(message.text))
        # —Å–ø—Ä–æ—Å–∏–º —Å–∫–æ–ª—å–∫–æ —Ç–µ–º–Ω—ã—Ö —Ä–∏—Ç—É–∞–ª–æ–≤ –∑–∞ –±–æ–ª—å—à–æ–π –∫—Ä—É–≥ –¥–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        how_much_dark_rit(message)
        model.go_to_step(CalculatorSteps.dr_amount)
      else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –¢–¢")

    case _:
      bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏')

# —Å–ø—Ä–æ—Å–∏–º —Å–∫–æ–ª—å–∫–æ —Ç–µ–º—Ä—ã—Ö —Ä–∏—Ç—É–∞–ª–æ–≤ –∑–∞ –±–æ–ª—å—à–æ–π –∫—Ä—É–≥ –¥–µ–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def how_much_dark_rit(message: types.Message):
  message_text = f'''–ó–∞ —Å–∫–æ–ª—å–∫–æ —Ç–µ–º–Ω—ã—Ö —Ä–∏—Ç—É–∞–ª–æ–≤ –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –±–æ–ª—å—à–æ–π –∫—Ä—É–≥?'''
  markup = types.InlineKeyboardMarkup()
  one_button = types.InlineKeyboardButton("1Ô∏è‚É£ –û–¥–∏–Ω", callback_data='mode_1')
  two_button = types.InlineKeyboardButton("2Ô∏è‚É£ –î–≤–∞", callback_data='mode_2')
  three_button = types.InlineKeyboardButton("3Ô∏è‚É£ –¢—Ä–∏", callback_data='mode_3')
  markup.add(one_button, two_button, three_button)
  bot.send_message(message.chat.id, message_text, 'markdown', reply_markup=markup)